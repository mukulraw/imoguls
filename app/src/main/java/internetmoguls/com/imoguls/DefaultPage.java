package internetmoguls.com.imoguls;import android.app.Dialog;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageManager;import android.graphics.Bitmap;import android.graphics.Color;import android.graphics.Point;import android.graphics.Typeface;import android.net.Uri;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.design.widget.NavigationView;import android.support.design.widget.TabLayout;import android.support.v4.app.ActivityCompat;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentActivity;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.app.FragmentStatePagerAdapter;import android.support.v4.app.FragmentTransaction;import android.support.v4.view.GravityCompat;import android.support.v4.view.ViewPager;import android.support.v4.widget.DrawerLayout;import android.support.v7.app.ActionBarDrawerToggle;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.support.v7.widget.Toolbar;import android.text.Html;import android.text.TextUtils;import android.util.Log;import android.view.Display;import android.view.Gravity;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.view.Window;import android.widget.Button;import android.widget.EditText;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.drive.internal.StringListResponse;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;import com.nostra13.universalimageloader.core.ImageLoader;import com.nostra13.universalimageloader.core.assist.FailReason;import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;import java.util.ArrayList;import java.util.List;import java.util.Locale;import java.util.Objects;import INTERFACES.Register;import POJO.RegisterBean;import POJO.fnbBean;import aboutPOJO.aboutBean;import contactPOJO.contactBean;import facilityPOJO.facilityBean;import galleryPOJO.Gallery;import galleryPOJO.galleryBean;import meetingsPOJO.meetingBean;import offerPOJO.offerBean;import popupPOJO.popupBean;import propertiesPOJO.HotelDetail;import propertiesPOJO.propertyBean;import restaurantPOJO.Restaurant;import restaurantPOJO.restaurantBean;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.converter.scalars.ScalarsConverterFactory;import roomsPOJO.Room;import roomsPOJO.roomsBean;public class DefaultPage extends AppCompatActivity {    SharedPreferences pref;    SharedPreferences.Editor edit;    DrawerLayout drawer;    FragmentManager fm;    LinearLayout layoutToReplace;    TextView clickHotels;    RecyclerView hotelName;    static Toast toast;    List<HotelDetail> list;    ImageButton facebook , instagram;    GridLayoutManager manager;    String form;    static Context context;    static PropertyAdapter adapter;    boolean isCollapsed = false;    TextView tv , tv2;    Toolbar toolbar;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_default_page);        context = DefaultPage.this;        pref = getSharedPreferences("myPref", Context.MODE_PRIVATE);        edit = pref.edit();        toast = Toast.makeText(this , null , Toast.LENGTH_SHORT);        list = new ArrayList<>();        adapter = new PropertyAdapter(this , list);        manager = new GridLayoutManager(this , 1);        facebook = (ImageButton) findViewById(R.id.facebook);        instagram = (ImageButton)findViewById(R.id.instagram);        hotelName = (RecyclerView) findViewById(R.id.hotel_name_menu);        hotelName.setAdapter(adapter);        hotelName.setLayoutManager(manager);        clickHotels = (TextView)findViewById(R.id.click_hotel);        facebook.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(getApplicationContext() , WebView.class);                intent.putExtra("url" , "https://www.facebook.com/kohinoorhotels/");                startActivity(intent);            }        });        instagram.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(getApplicationContext() , WebView.class);                intent.putExtra("url" , "https://www.instagram.com/kohinoorhotelsindia/");                startActivity(intent);            }        });        if (isCollapsed)        {            clickHotels.setCompoundDrawablesWithIntrinsicBounds(0 , 0 , R.drawable.down , 0);            hotelName.setVisibility(View.GONE);        }        else        {            clickHotels.setCompoundDrawablesWithIntrinsicBounds(0 , 0 , R.drawable.up , 0);            hotelName.setVisibility(View.VISIBLE);        }        clickHotels.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (isCollapsed)                {                    clickHotels.setCompoundDrawablesWithIntrinsicBounds(0 , 0 , R.drawable.up , 0);                    hotelName.setVisibility(View.VISIBLE);                    isCollapsed = false;                }                else                {                    clickHotels.setCompoundDrawablesWithIntrinsicBounds(0 , 0 , R.drawable.down , 0);                    hotelName.setVisibility(View.GONE);                    isCollapsed = true;                }            }        });   /*     asiana1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Log.d("asdasdasdasd" , "asiana clicked");                FragmentTransaction t1 = getSupportFragmentManager().beginTransaction();                AsianaFragment frag1 = new AsianaFragment();                t1.replace(R.id.container_layout , frag1);                toolbar.setTitle("Kohinoor Asiana");                toolbar.setTitleTextColor(Color.WHITE);                t1.commit();                drawer.closeDrawer(GravityCompat.START);            }        });        continental1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Log.d("asdasdasdasd" , "continental clicked");                FragmentTransaction t1 = getSupportFragmentManager().beginTransaction();                ContinentalFragment frag1 = new ContinentalFragment();                t1.replace(R.id.container_layout , frag1);                toolbar.setTitle("Kohinoor Continental");                toolbar.setTitleTextColor(Color.WHITE);                t1.commit();                drawer.closeDrawer(GravityCompat.START);            }        });        elite1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Log.d("asdasdasdasd" , "elite clicked");                FragmentTransaction t1 = getSupportFragmentManager().beginTransaction();                EliteFragment frag1 = new EliteFragment();                t1.replace(R.id.container_layout , frag1);                toolbar.setTitle("Kohinoor Elite");                toolbar.setTitleTextColor(Color.WHITE);                t1.commit();                drawer.closeDrawer(GravityCompat.START);            }        });*/        //NavigationView nav = (NavigationView) findViewById(R.id.navId);       // View view = nav.getHeaderView(0);        //nav.setNavigationItemSelectedListener(this);        tv = (TextView) findViewById(R.id.nav_name);        tv2 = (TextView) findViewById(R.id.nav_email);        bean b = (bean) getApplicationContext();        tv.setText("Hi " + b.username);        tv2.setText(b.email);        TextView profile = (TextView)findViewById(R.id.profile);        TextView logOut = (TextView)findViewById(R.id.menu_log_out);        TextView promoCode = (TextView)findViewById(R.id.menu_promo_code);        profile.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent = new Intent(getApplicationContext() , UserProfile.class);                startActivity(intent);            }        });        logOut.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                bean b = (bean) getApplicationContext();                Intent delService = new Intent(getBaseContext(), DeleteTokenService.class);                startService(delService);                b.userId = "";                b.username = "";                edit.putBoolean("email", false);                edit.remove("emailId");                edit.remove("RegId");                edit.remove("password");                edit.apply();                Intent intent = new Intent(DefaultPage.this , NotifyService.class);                stopService(intent);                Intent i = new Intent(DefaultPage.this, LoginActivity.class);                i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);                startActivity(i);                finish();            }        });        promoCode.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent i = new Intent(DefaultPage.this, PromoCodeActivity.class);                startActivity(i);            }        });        toolbar = (Toolbar) findViewById(R.id.toolbar);        drawer = (DrawerLayout) findViewById(R.id.drawer_asiana);        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);        drawer.setDrawerListener(toggle);        toggle.syncState();        layoutToReplace = (LinearLayout)findViewById(R.id.container_layout);        form = getIntent().getStringExtra("form");        String name = getIntent().getStringExtra("name");        String addr = getIntent().getStringExtra("addr");        fm = getSupportFragmentManager();        FragmentTransaction t1 = fm.beginTransaction();        AsianaFragment frag1 = new AsianaFragment();        Bundle bundle = new Bundle();        bundle.putString("form" , form);        frag1.setArguments(bundle);        t1.add(R.id.container_layout , frag1);        toolbar.setTitle(name);        toolbar.setSubtitle(addr);        toolbar.setSubtitleTextColor(Color.WHITE);        toolbar.setTitleTextColor(Color.WHITE);        setSupportActionBar(toolbar);        t1.commit();        /*if (form.equals("1"))        {            FragmentTransaction t1 = fm.beginTransaction();            AsianaFragment frag1 = new AsianaFragment();            t1.add(R.id.container_layout , frag1);            toolbar.setTitle("Kohinoor Asiana");            toolbar.setTitleTextColor(Color.WHITE);            t1.commit();        }        if (form.equals("2"))        {            FragmentTransaction t1 = fm.beginTransaction();            ContinentalFragment frag1 = new ContinentalFragment();            t1.add(R.id.container_layout , frag1);            toolbar.setTitle("Kohinoor Continental");            toolbar.setTitleTextColor(Color.WHITE);            t1.commit();        }        if (form.equals("3"))        {            FragmentTransaction t1 = fm.beginTransaction();            EliteFragment frag1 = new EliteFragment();            t1.add(R.id.container_layout , frag1);            toolbar.setTitle("Kohinoor Elite");            toolbar.setTitleTextColor(Color.WHITE);            t1.commit();        }*/        Retrofit retrofit = new Retrofit.Builder()                .baseUrl("http://nationproducts.in/")                .addConverterFactory(ScalarsConverterFactory.create())                .addConverterFactory(GsonConverterFactory.create())                .build();        Register cr = retrofit.create(Register.class);        Call<propertyBean> call2 = cr.getProperties();        call2.enqueue(new Callback<propertyBean>() {            @Override            public void onResponse(Call<propertyBean> call, Response<propertyBean> response) {                if (response.body() != null) {                    list = response.body().getHotelDetail();                    adapter.setGridData(list);                }            }            @Override            public void onFailure(Call<propertyBean> call, Throwable t) {            }        });    }    @Override    protected void onResume() {        super.onResume();        bean b = (bean) getApplicationContext();        tv.setText("Hi " + b.username);        tv2.setText(b.email);    }    @Override    public boolean onPrepareOptionsMenu(Menu menu) {        MenuInflater inflater = getMenuInflater();        inflater.inflate(R.menu.toolbar_menu, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            // action with ID action_refresh was selected            case R.id.call:                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<bookingEngineBean> call = cr.getBookingEngine(form);                call.enqueue(new Callback<bookingEngineBean>() {                    @Override                    public void onResponse(Call<bookingEngineBean> call, Response<bookingEngineBean> response) {                        if (response.body().getBookUrl() != null) {                            Intent intent = new Intent(Intent.ACTION_DIAL);                            intent.setData(Uri.parse("tel:"+response.body().getPhoneNumber()));                            startActivity(intent);                        }                    }                    @Override                    public void onFailure(Call<bookingEngineBean> call, Throwable t) {                    }                });                break;            // action with ID action_settings was selected            case R.id.navigate:                Retrofit retrofit2 = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr2 = retrofit2.create(Register.class);                Call<bookingEngineBean> call2 = cr2.getBookingEngine(form);                call2.enqueue(new Callback<bookingEngineBean>() {                    @Override                    public void onResponse(Call<bookingEngineBean> call, Response<bookingEngineBean> response) {                        if (response.body().getBookUrl() != null) {                            Uri gmmIntentUri = Uri.parse("geo:"+response.body().getLatitude()+","+response.body().getLongitude());                            Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);                            mapIntent.setPackage("com.google.android.apps.maps");                            if (mapIntent.resolveActivity(getPackageManager()) != null) {                                startActivity(mapIntent);                            }                        }                    }                    @Override                    public void onFailure(Call<bookingEngineBean> call, Throwable t) {                    }                });                break;            default:                DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_asiana);                if (drawer.isDrawerOpen(GravityCompat.START)) {                    drawer.closeDrawer(GravityCompat.START);                } else {                    drawer.openDrawer(GravityCompat.START);                }                break;        }        return true;    }    /*  @Override    public boolean onNavigationItemSelected(@NonNull MenuItem item) {        int id = item.getItemId();        if (id == R.id.nav_log_out) {            bean b = (bean) getApplicationContext();            Intent delService = new Intent(this, DeleteTokenService.class);            startService(delService);            b.userId = "";            b.username = "";            edit.putBoolean("email", false);            edit.remove("emailId");            edit.remove("RegId");            edit.remove("password");            edit.apply();            Intent i = new Intent(DefaultPage.this, LoginActivity.class);            i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);            startActivity(i);            finish();        }        if (id == R.id.nav_camera) {            Intent i = new Intent(DefaultPage.this, PromoCodeActivity.class);            startActivity(i);        }        return false;    }    */    @Override    public void onBackPressed() {        if (drawer.isDrawerOpen(GravityCompat.START))        {            drawer.closeDrawer(GravityCompat.START);        }        else        {            super.onBackPressed();        }    }    class PropertyAdapter  extends RecyclerView.Adapter<PropertyAdapter.ViewHolder>{        List<HotelDetail> list = new ArrayList<>();        Context context;        String id = "";        public PropertyAdapter(Context context , List<HotelDetail> list)        {            this.context = context;            this.list = list;        }        public void setGridData(List<HotelDetail> list)        {            this.list = list;            notifyDataSetChanged();        }        public void setChecked(String id)        {            this.id = id;            notifyDataSetChanged();        }        @Override        public PropertyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {            LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            View view = inflater.inflate(R.layout.menu_model , parent , false);            return new ViewHolder(view);        }        @Override        public void onBindViewHolder(ViewHolder holder, int position) {            HotelDetail item = list.get(position);            if (Objects.equals(id, item.getHotelId()))            {                holder.propertyName.setTextColor(Color.BLACK);            }            else            {                holder.propertyName.setTextColor(Color.GRAY);            }            Typeface tf = Typeface.createFromAsset(getAssets() , "roboto.ttf");            holder.propertyName.setText(item.getHotelName() + ", " + item.getHotelDescription());            holder.propertyName.setTypeface(tf);        }        @Override        public int getItemCount() {            return list.size();        }        class ViewHolder extends RecyclerView.ViewHolder{            TextView propertyName;            ViewHolder(View itemView) {                super(itemView);                propertyName = (TextView)itemView.findViewById(R.id.name);                itemView.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View view) {                        FragmentTransaction t1 = getSupportFragmentManager().beginTransaction();                        AsianaFragment frag1 = new AsianaFragment();                        Bundle bundle = new Bundle();                        bundle.putString("form" , list.get(getAdapterPosition()).getHotelId());                        frag1.setArguments(bundle);                        t1.replace(R.id.container_layout , frag1);                        toolbar.setTitle(list.get(getAdapterPosition()).getHotelName());                        toolbar.setSubtitle(list.get(getAdapterPosition()).getHotelDescription());                        toolbar.setSubtitleTextColor(Color.WHITE);                        toolbar.setTitleTextColor(Color.WHITE);                        t1.commit();                        drawer.closeDrawer(GravityCompat.START);                    }                });            }        }    }    public static class AsianaFragment extends Fragment {        TabLayout tabs;        MyViewPager pager;        DrawerLayout drawer;        ImageButton left , right;        SharedPreferences pref;        static SharedPreferences.Editor edit;        static Typeface tf;        static Typeface tf2;        static String hotelId;        ProgressBar progress2;        Button book;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View view  = inflater.inflate(R.layout.activity_asiana , container , false);            progress2 = (ProgressBar)view.findViewById(R.id.progress2);            book = (Button)view.findViewById(R.id.book_button);            hotelId = getArguments().getString("form");            adapter.setChecked(hotelId);            pref = getContext().getSharedPreferences("myPref", Context.MODE_PRIVATE);            edit = pref.edit();            left = (ImageButton)view.findViewById(R.id.asiana_left);            right = (ImageButton)view.findViewById(R.id.asiana_right);            left.setVisibility(View.GONE);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<popupBean> call = cr.getPopup(hotelId);            call.enqueue(new Callback<popupBean>() {                @Override                public void onResponse(Call<popupBean> call, Response<popupBean> response) {                    if (response.body().getPopimage().getImage().length()>0) {                        final Dialog dialog = new Dialog(getActivity());                        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);                        dialog.setCancelable(true);                        dialog.setContentView(R.layout.popup_layout);                        dialog.show();                        final ImageView image = (ImageView) dialog.findViewById(R.id.image);                        ImageButton cross = (ImageButton) dialog.findViewById(R.id.cross);                        final ProgressBar progress = (ProgressBar) dialog.findViewById(R.id.progress);                        ImageLoader loader = ImageLoader.getInstance();                        loader.loadImage(response.body().getPopimage().getImage(), new ImageLoadingListener() {                            @Override                            public void onLoadingStarted(String imageUri, View view) {                                progress.setVisibility(View.VISIBLE);                            }                            @Override                            public void onLoadingFailed(String imageUri, View view, FailReason failReason) {                                progress.setVisibility(View.GONE);                            }                            @Override                            public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {                                image.setImageBitmap(loadedImage);                                progress.setVisibility(View.GONE);                            }                            @Override                            public void onLoadingCancelled(String imageUri, View view) {                                progress.setVisibility(View.GONE);                            }                        });                        cross.setOnClickListener(new View.OnClickListener() {                            @Override                            public void onClick(View view) {                                dialog.dismiss();                            }                        });                    }                }                @Override                public void onFailure(Call<popupBean> call, Throwable t) {                }            });            book.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    progress2.setVisibility(View.VISIBLE);                    Retrofit retrofit = new Retrofit.Builder()                            .baseUrl("http://nationproducts.in/")                            .addConverterFactory(ScalarsConverterFactory.create())                            .addConverterFactory(GsonConverterFactory.create())                            .build();                    Register cr = retrofit.create(Register.class);                    Call<bookingEngineBean> call = cr.getBookingEngine(hotelId);                    call.enqueue(new Callback<bookingEngineBean>() {                        @Override                        public void onResponse(Call<bookingEngineBean> call, Response<bookingEngineBean> response) {                            if (response.body().getBookUrl() != null) {                                progress2.setVisibility(View.GONE);                                Intent i = new Intent(getActivity(), WebView.class);                                i.putExtra("url", response.body().getBookUrl());                                getActivity().startActivity(i);                            }                        }                        @Override                        public void onFailure(Call<bookingEngineBean> call, Throwable t) {                            progress2.setVisibility(View.GONE);                        }                    });                }            });            bean b = (bean) getContext().getApplicationContext();            tf = Typeface.createFromAsset(getContext().getAssets(), "roboto.ttf");            tf2 = Typeface.createFromAsset(getContext().getAssets(), "vladmir.TTF");            tabs = (TabLayout) view.findViewById(R.id.tabs_asiana);            pager = (MyViewPager) view.findViewById(R.id.pager_asiana);            pager.setSwipeable(false);            tabs.setFitsSystemWindows(true);            pager.setOffscreenPageLimit(0);            View av = inflater.inflate(R.layout.tab_about, null);            View av1 = inflater.inflate(R.layout.tab_about, null);            View av3 = inflater.inflate(R.layout.tab_about, null);            View av4 = inflater.inflate(R.layout.tab_about, null);            View av5 = inflater.inflate(R.layout.tab_about, null);            View av6 = inflater.inflate(R.layout.tab_about, null);            View av7 = inflater.inflate(R.layout.tab_about, null);            TextView tabtext = (TextView) av.findViewById(R.id.tab_text);            TextView tabtext1 = (TextView) av1.findViewById(R.id.tab_text);            TextView tabtext3 = (TextView) av3.findViewById(R.id.tab_text);            TextView tabtext4 = (TextView) av4.findViewById(R.id.tab_text);            TextView tabtext5 = (TextView) av5.findViewById(R.id.tab_text);            TextView tabtext6 = (TextView) av6.findViewById(R.id.tab_text);            TextView tabtext7 = (TextView) av7.findViewById(R.id.tab_text);            Display display = getActivity().getWindowManager().getDefaultDisplay();            Point size = new Point();            display.getSize(size);            tabtext.setMinWidth(size.x / 3);            tabtext.setMaxWidth(size.x / 3);            tabtext.setText("About");            tabtext1.setMinWidth(size.x / 3);            tabtext1.setMaxWidth(size.x / 3);            tabtext1.setText("Rooms");            tabtext3.setMinWidth(size.x / 3);            tabtext3.setMaxWidth(size.x / 3);            tabtext3.setText("facilities");            tabtext4.setMinWidth(size.x / 3);            tabtext4.setMaxWidth(size.x / 3);            tabtext4.setText("Events");            tabtext5.setMinWidth(size.x / 3);            tabtext5.setMaxWidth(size.x / 3);            tabtext5.setText("Contact us");            tabtext6.setMinWidth(size.x / 3);            tabtext6.setMaxWidth(size.x / 3);            tabtext6.setText("Gallery");            tabtext7.setMinWidth(size.x / 3);            tabtext7.setMaxWidth(size.x / 3);            tabtext7.setText("Restaurants");//        tabs.addTab(tabs.newTab().setCustomView(av));            //      tabs.addTab(tabs.newTab().setText("ROOMS"));            //  tabs.addTab(tabs.newTab().setText("F and B"));            //    tabs.addTab(tabs.newTab().setText("MEETING/EVENTS"));            tabs.setTabMode(TabLayout.MODE_SCROLLABLE);            tabs.setTabGravity(TabLayout.GRAVITY_FILL);            FragStatePagerAdapter adapter = new FragStatePagerAdapter(getChildFragmentManager(), 7);            pager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabs));            pager.setAdapter(adapter);            tabs.setupWithViewPager(pager);            tabs.getTabAt(0).setCustomView(av);            tabs.getTabAt(1).setCustomView(av1);            tabs.getTabAt(2).setCustomView(av3);            tabs.getTabAt(3).setCustomView(av4);            tabs.getTabAt(4).setCustomView(av5);            tabs.getTabAt(5).setCustomView(av6);            tabs.getTabAt(6).setCustomView(av7);            tabs.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {                @Override                public void onTabSelected(TabLayout.Tab tab) {                    if (tab.getPosition() == 0)                    {                        left.setVisibility(View.GONE);                    }                    else                    {                        left.setVisibility(View.VISIBLE);                    }                    if (tab.getPosition() == 6)                    {                        right.setVisibility(View.GONE);                    }                    else                    {                        right.setVisibility(View.VISIBLE);                    }                    pager.setCurrentItem(tab.getPosition());                    View v = tab.getCustomView();                    TextView tv = null;                    if (v != null) {                        tv = (TextView) v.findViewById(R.id.tab_text);                    }                    //tv.setBackgroundColor(getResources().getColor(R.color.colorAccent));                    if (tv != null) {                        tv.setTextColor(getResources().getColor(R.color.colorAccent));                    }                }                @Override                public void onTabUnselected(TabLayout.Tab tab) {                    View v = tab.getCustomView();                    TextView tv = null;                    if (v != null) {                        tv = (TextView) v.findViewById(R.id.tab_text);                    }                    if (tv != null) {                        tv.setTextColor(Color.GRAY);                    }                }                @Override                public void onTabReselected(TabLayout.Tab tab) {                }            });            return view;        }        class FragStatePagerAdapter extends FragmentStatePagerAdapter {            private int count;            FragStatePagerAdapter(FragmentManager fm, int count) {                super(fm);                this.count = count;            }            @Override            public Fragment getItem(int position) {                switch (position) {                    case 0:                        return new about();                    case 1:                        return new rooms();                    case 2:                        return new facilities();                    case 3:                        return new meetings();                    case 4:                        return new contact();                    case 5:                        return new gallery();                    case 6:                        return new restaurants();                }                return null;            }            @Override            public int getCount() {                return count;            }        }        public static class facilities extends Fragment{            RecyclerView layoutToReplace;            ProgressBar progress;            GridLayoutManager manager;            FacilityAdapter adapter;            List<facilityBean> list;            @Nullable            @Override            public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View view = inflater.inflate(R.layout.asiana_facilities , container , false);                list = new ArrayList<>();                manager = new GridLayoutManager(context , 1);                adapter = new FacilityAdapter(context , list);                layoutToReplace = (RecyclerView) view.findViewById(R.id.layout_to_replace);                layoutToReplace.setLayoutManager(manager);                layoutToReplace.setAdapter(adapter);                progress = (ProgressBar)view.findViewById(R.id.progress);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<List<facilityBean>> call = cr.getFacilities(hotelId);                call.enqueue(new Callback<List<facilityBean>>() {                    @Override                    public void onResponse(Call<List<facilityBean>> call, Response<List<facilityBean>> response) {                        if (response.body()!=null)                        {                            list = response.body();                            adapter.setGridData(list);                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<List<facilityBean>> call, Throwable t) {                    }                });                return view;            }        }        public static class restaurants extends Fragment{            RecyclerView grid;            ProgressBar progress;            GridLayoutManager manager;            RestaurantAdapter adapter;            TextView head;            List<Restaurant> list;            @Nullable            @Override            public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View view = inflater.inflate(R.layout.restaurant_page , container , false);                progress = (ProgressBar)view.findViewById(R.id.progress);                grid = (RecyclerView)view.findViewById(R.id.grid);                head = (TextView)view.findViewById(R.id.head);                manager = new GridLayoutManager(getContext() , 1);                head.setTypeface(tf2);                head.setTextSize(30);                list = new ArrayList<>();                adapter = new RestaurantAdapter(getContext() , list);                grid.setNestedScrollingEnabled(false);                grid.setLayoutManager(manager);                grid.setAdapter(adapter);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<restaurantBean> call = cr.getRestaurants(hotelId);                call.enqueue(new Callback<restaurantBean>() {                    @Override                    public void onResponse(Call<restaurantBean> call, Response<restaurantBean> response) {                        if (response.body() != null) {                            head.setText(response.body().getRestaurantHeading().getHeading());                            adapter.setGridData(response.body().getRestaurantData().getRestaurant());                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<restaurantBean> call, Throwable t) {                    }                });                return view;            }        }        public static class contact extends Fragment {            GoogleMap mMap;            ProgressBar progress;            TextView title , phone , email;            android.webkit.WebView address;            @Nullable            @Override            public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {                View view = inflater.inflate(R.layout.contacy_asiana, container, false);                progress = (ProgressBar)view.findViewById(R.id.progress);                SupportMapFragment mapFragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.eventMapView);                mapFragment.getMapAsync(new OnMapReadyCallback() {                    @Override                    public void onMapReady(GoogleMap googleMap) {                        mMap = googleMap;                    }                });                title = (TextView)view.findViewById(R.id.contact_title);                phone = (TextView)view.findViewById(R.id.contact_phone);                address = (android.webkit.WebView) view.findViewById(R.id.contact_address);                email = (TextView)view.findViewById(R.id.contact_email);                title.setTypeface(tf2);                title.setTextSize(30);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<contactBean> call = cr.getContact(hotelId);                call.enqueue(new Callback<contactBean>() {                    @Override                    public void onResponse(Call<contactBean> call, final Response<contactBean> response) {                        if (response.body()!=null)                        {                            title.setText(Html.fromHtml(response.body().getContactTitle()));                            phone.setText(Html.fromHtml(response.body().getContactPhone()));                            email.setText(Html.fromHtml(response.body().getContactEmail()));                            String htmlText = "<html><body style=\"text-align:justify; background:#f5f5f5; padding:0 10px;\"><font size=\"3\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                            address.loadData(String.format(htmlText , response.body().getContactAddress()) , "text/html", null);                            address.setFocusable(false);                                    LatLng loc = new LatLng(Double.parseDouble(response.body().getLatitude()), Double.parseDouble(response.body().getLongitude()));                                    mMap.addMarker(new MarkerOptions().position(loc).title(response.body().getHotelName()));                                    mMap.animateCamera(CameraUpdateFactory.newLatLng(loc));                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<contactBean> call, Throwable t) {                    }                });                return view;            }        }        public static class about extends Fragment{            TextView title;            ImageView image;            android.webkit.WebView content;            ProgressBar progress;            @Nullable            @Override            public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View v = inflater.inflate(R.layout.asiana_about_us , container , false);                title = (TextView)v.findViewById(R.id.about_title);                content = (android.webkit.WebView) v.findViewById(R.id.about_content);                image = (ImageView)v.findViewById(R.id.about_image);                progress = (ProgressBar)v.findViewById(R.id.progress);                title.setTypeface(tf2);                title.setTextSize(30);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<aboutBean> call = cr.getAbout(hotelId);                call.enqueue(new Callback<aboutBean>() {                    @Override                    public void onResponse(Call<aboutBean> call, Response<aboutBean> response) {                        if (response.body()!=null)                        {                            ImageLoader loader = ImageLoader.getInstance();                            //loader.displayImage(response.body().getAboutImage() , image);                            loader.loadImage(response.body().getAboutImage(), new ImageLoadingListener() {                                @Override                                public void onLoadingStarted(String imageUri, View view) {                                    progress.setVisibility(View.VISIBLE);                                }                                @Override                                public void onLoadingFailed(String imageUri, View view, FailReason failReason) {                                    progress.setVisibility(View.GONE);                                }                                @Override                                public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {                                    image.setImageBitmap(loadedImage);                                    progress.setVisibility(View.GONE);                                }                                @Override                                public void onLoadingCancelled(String imageUri, View view) {                                }                            });                            String htmlText = "<html><body style=\"text-align:justify; background:#ffffff; padding:0 10px;\"><font size=\"3\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                            title.setText(Html.fromHtml(response.body().getAboutTitle()));                            content.loadData(String.format(htmlText , response.body().getAboutDescription()) , "text/html", null);                            content.setFocusable(false);                        }                    }                    @Override                    public void onFailure(Call<aboutBean> call, Throwable t) {                    }                });                return v;            }        }        public static class gallery extends Fragment{            TextView title;            RecyclerView grid;            List<Gallery> list;            ProgressBar progress;            GridLayoutManager manager;            static List<Bitmap> imageLists;            GalleryAdapter adapter;            @Nullable            @Override            public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View v = inflater.inflate(R.layout.gallery_page , container , false);                imageLists = new ArrayList<>();                progress = (ProgressBar)v.findViewById(R.id.progress);                manager = new GridLayoutManager(getContext() , 2);                grid = (RecyclerView)v.findViewById(R.id.gallery_list);                list = new ArrayList<>();                title = (TextView)v.findViewById(R.id.gallery_heading);                adapter = new GalleryAdapter(getContext() , list);                grid.setNestedScrollingEnabled(false);                grid.setLayoutManager(manager);                grid.setAdapter(adapter);                title.setTypeface(tf2);                title.setTextSize(30);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<galleryBean> call = cr.getGallery(hotelId);                call.enqueue(new Callback<galleryBean>() {                    @Override                    public void onResponse(Call<galleryBean> call, Response<galleryBean> response) {                        if (response.body()!=null) {                            if (response.body().getGalleryHeading().getHeading() != null)                            {                                title.setText(response.body().getGalleryHeading().getHeading());                            }                            adapter.setGridData(response.body().getGallerData().getGallery());                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<galleryBean> call, Throwable t) {                    }                });                return v;            }            static class GalleryAdapter extends RecyclerView.Adapter<GalleryAdapter.ViewHolder> {                List<Gallery> list = new ArrayList<>();                Context context;                List<Bitmap> l2 = new ArrayList<>();                public GalleryAdapter(Context context , List<Gallery> list)                {                    this.context = context;                    this.list = list;                }                public GalleryAdapter(Context context)                {                    this.context = context;                }                public void setGridData(List<Gallery> list)                {                    this.list = list;                    notifyDataSetChanged();                }                @Override                public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {                    LayoutInflater inflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);                    View view = inflater.inflate(R.layout.gallery_model , parent , false);                    return new ViewHolder(view);                }                @Override                public void onBindViewHolder(final ViewHolder holder, final int position) {                    final Gallery item = list.get(position);                    final ImageLoader loader = ImageLoader.getInstance();//                loader.displayImage(item.getGalleryImage() , holder.image);                    final Bitmap[] b = new Bitmap[1];                    loader.loadImage(item.getGalleryImage(), new ImageLoadingListener() {                        @Override                        public void onLoadingStarted(String imageUri, View view) {                        }                        @Override                        public void onLoadingFailed(String imageUri, View view, FailReason failReason) {                        }                        @Override                        public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {                            b[0] = loadedImage;                            l2.add(b[0]);                            holder.image.setImageBitmap(b[0]);                        }                        @Override                        public void onLoadingCancelled(String imageUri, View view) {                        }                    });                    holder.name.setText(item.getGalleryTitle());                    String htmlText = "<html><body style=\"text-align:justify; background:#f5f5f5; padding:0 2px;\"><font size=\"2\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                    holder.content.loadData(String.format(htmlText , item.getGalleryDescription()) , "text/html", null);                    holder.content.setFocusable(false);                    holder.itemView.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View view) {                            Intent i = new Intent(context, ImageViewPager.class);                            // Show a simple toast message for the item position                            // Send the click position to ImageViewPager.java using intent                            i.putExtra("id", position);                            // Start ImageViewPager                            context.startActivity(i);                        }                    });                }                @Override                public int getItemCount() {                    return list.size();                }                class ViewHolder extends RecyclerView.ViewHolder{                    TextView name;                    ImageView image;                    android.webkit.WebView content;                    public ViewHolder(View itemView) {                        super(itemView);                        name = (TextView)itemView.findViewById(R.id.gallery_name);                        content = (android.webkit.WebView) itemView.findViewById(R.id.gallery_content);                        image = (ImageView)itemView.findViewById(R.id.gallery_image);                    }                }            }            public class SectionsPagerAdapter extends FragmentStatePagerAdapter            {                int position;                int size;                public SectionsPagerAdapter(FragmentManager fm , int position , int size)                {                    super(fm);                    this.position = position;                    this.size = size;                }                @Override                public Fragment getItem(int position)                {                    PlaceholderFragment frag = new PlaceholderFragment();                    Bundle b = new Bundle();                    b.putInt("position" , this.position);                    frag.setArguments(b);                    return frag;                }                @Override                public int getCount()                {                    // Show 3 total pages.                    return size;                }            }            public static class PlaceholderFragment extends Fragment{                int position;                @Nullable                @Override                public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                    View view = inflater.inflate(R.layout.image_layout , container , false);                    position = getArguments().getInt("position");                    ImageView image = (ImageView)view.findViewById(R.id.image);                    image.setImageBitmap(imageLists.get(position));                    return view;                }            }        }        public static class rooms extends Fragment{            protected int a;            ProgressBar progress;            TextView title;            RecyclerView grid;            GridLayoutManager manager;            RoomsAdapter adapter;            List<Room> list;            @Nullable            @Override            public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View v = inflater.inflate(R.layout.asiana_rooms , container , false);                progress = (ProgressBar)v.findViewById(R.id.progress);                list = new ArrayList<>();                title = (TextView)v.findViewById(R.id.rooms_title);                grid = (RecyclerView)v.findViewById(R.id.rooms_list);                grid.setNestedScrollingEnabled(false);                title.setTypeface(tf2);                title.setTextSize(30);                manager = new GridLayoutManager(getContext() , 1);                adapter = new RoomsAdapter(getContext() , list);                grid.setLayoutManager(manager);                grid.setAdapter(adapter);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<roomsBean> call = cr.getRooms(hotelId);                call.enqueue(new Callback<roomsBean>() {                    @Override                    public void onResponse(Call<roomsBean> call, Response<roomsBean> response) {                        if (response.body()!=null)                        {                            if (response.body().getRoomHeading().getHeading() != null)                            {                                title.setText(response.body().getRoomHeading().getHeading());                            }                            //list = response.body().getRoomData().getRoom();                            adapter.setGridData(response.body().getRoomData().getRoom());                            progress.setVisibility(View.GONE);                        }                    }                    @Override                    public void onFailure(Call<roomsBean> call, Throwable t) {                    }                });                return v;            }        }        public static class fnb extends Fragment{            //FnBListAdapter adapter;            //RecyclerView grid;            //GridLayoutManager manager;            //TextView hide;            ProgressBar progress;            LinearLayout todaysOffer , moreOffers;            TextView todaysoffer , moreoffer;            @Override            public void onCreate(@Nullable Bundle savedInstanceState) {                super.onCreate(savedInstanceState);                // manager = new GridLayoutManager(getContext() , 1);            }            @Nullable            @Override            public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View v = inflater.inflate(R.layout.asiana_fnb , container , false);                progress = (ProgressBar)v.findViewById(R.id.progress);                todaysOffer = (LinearLayout)v.findViewById(R.id.layout_todays_offer);                moreOffers = (LinearLayout)v.findViewById(R.id.fnb_more_offers);                todaysoffer = (TextView)v.findViewById(R.id.todaysoffer);                moreoffer = (TextView)v.findViewById(R.id.moreoffers);                todaysoffer.setTypeface(tf);                moreoffer.setTypeface(tf);                TextView title = (TextView)v.findViewById(R.id.asiana_fnb_title);                title.setTypeface(tf2);                title.setTextSize(30);                //hide = (TextView)v.findViewById(R.id.hide);                // grid = (RecyclerView)v.findViewById(R.id.fnb_list);                // grid.setLayoutManager(manager);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<offerBean> call = cr.getfnb(hotelId);                call.enqueue(new Callback<offerBean>() {                    @Override                    public void onResponse(Call<offerBean> call, Response<offerBean> response) {                        if (response.body().getOffer()!=null)                        {                            for (int i = 0 ; i<response.body().getOffer().size() ; i++)                            {                                if (response.body().getOffer().get(i).getOfferDay().equals("1"))                                {                                    todaysoffer.setVisibility(View.VISIBLE);                                    ImageLoader imageLoader = ImageLoader.getInstance();                                    //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                    View view = inflater.inflate(R.layout.fnb_model , null);                                    ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                    TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                    android.webkit.WebView desc = (android.webkit.WebView) view.findViewById(R.id.fnb_offer_desc);                                    /*book.setOnClickListener(new View.OnClickListener() {                                        @Override                                        public void onClick(View view) {                                            Intent i = new Intent(getActivity() , WebView.class);                                            i.putExtra("url" , "http://www.axisrooms.com/beV2/home1.html?bookingEngineId=1792");                                            getActivity().startActivity(i);                                        }                                    });*/                                    imageLoader.displayImage(response.body().getOffer().get(i).getImage() , banner);                                    title.setText(response.body().getOffer().get(i).getOfferName());                                    //desc.setText(response.body().getOffer().get(i).getDescription());                                    String htmlText = "<html><body style=\"text-align:justify; padding:0 10px;\"><font size=\"3\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                                    desc.loadData(String.format(htmlText , response.body().getOffer().get(i).getDescription()) , "text/html", null );                                    desc.setFocusable(false);                                    todaysOffer.addView(view);                                }                                else                                {                                    moreoffer.setVisibility(View.VISIBLE);                                    ImageLoader imageLoader = ImageLoader.getInstance();                                    //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                    View view = inflater.inflate(R.layout.fnb_model , null);                                    ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                    TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                    android.webkit.WebView desc = (android.webkit.WebView) view.findViewById(R.id.fnb_offer_desc);                                    //Button book = (Button)view.findViewById(R.id.fnb_offer_button);                                    imageLoader.displayImage(response.body().getOffer().get(i).getImage() , banner);                                    String htmlText = "<html><body style=\"text-align:justify; padding:0 10px;\"><font size=\"3\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                                    title.setText(response.body().getOffer().get(i).getOfferName());                                    //desc.setText(response.body().getOffer().get(i).getDescription());                                    desc.loadData(String.format(htmlText , response.body().getOffer().get(i).getDescription()) , "text/html", null );                                    desc.setFocusable(false);                                    moreOffers.addView(view);                                }                            }                            // adapter = new FnBListAdapter(getContext() , response.body().getPosts());                            //  grid.setAdapter(adapter);                            //hide.setVisibility(View.GONE);                            // grid.setVisibility(View.VISIBLE);                        }                        else                        {                            //hide.setVisibility(View.VISIBLE);                            //  grid.setVisibility(View.GONE);                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<offerBean> call, Throwable t) {                    }                });                return v;            }        }        public static class meetings extends Fragment{            EditText name , email , phone , sub , mess;            TextView title;            android.webkit.WebView content;            android.webkit.WebView banquet;            ProgressBar progress;            Button submit;            @Nullable            @Override            public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {                View v = inflater.inflate(R.layout.asiana_meetings , container , false);                progress = (ProgressBar)v.findViewById(R.id.progress);                name = (EditText)v.findViewById(R.id.asiana_m_name);                email = (EditText)v.findViewById(R.id.asiana_m_email);                phone = (EditText)v.findViewById(R.id.asiana_m_phone);                sub = (EditText)v.findViewById(R.id.asiana_m_subject);                mess = (EditText)v.findViewById(R.id.asiana_m_message);                submit = (Button) v.findViewById(R.id.asiana_m_submit);                title = (TextView)v.findViewById(R.id.meetings_title);                content = (android.webkit.WebView) v.findViewById(R.id.meetings_content);                banquet = (android.webkit.WebView) v.findViewById(R.id.banquet);                title.setTypeface(tf2);                title.setTextSize(30);                progress.setVisibility(View.VISIBLE);                Retrofit retrofit = new Retrofit.Builder()                        .baseUrl("http://nationproducts.in/")                        .addConverterFactory(ScalarsConverterFactory.create())                        .addConverterFactory(GsonConverterFactory.create())                        .build();                Register cr = retrofit.create(Register.class);                Call<meetingBean> call = cr.getMeetings(hotelId);                call.enqueue(new Callback<meetingBean>() {                    @Override                    public void onResponse(Call<meetingBean> call, Response<meetingBean> response) {                        if (response.body()!=null)                        {                            title.setText(Html.fromHtml(response.body().getMeetName()));                            String htmlText = "<html><body style=\"text-align:justify; background:#f5f5f5; padding:0 10px;\"><font size=\"3\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                            String htmlText2 = "<html><body style=\"background:#f5f5f5; padding:0 10px;\"><font size=\"2\" weight=\"300\" face=\"roboto\" color=\"#808080\"> %s </font></body></Html>";                            content.loadData(String.format(htmlText , response.body().getMeetDescription()) , "text/html", null);                            content.setFocusable(false);                            banquet.loadData(String.format(htmlText2 , response.body().getBanquets()) , "text/html", null);                        }                        progress.setVisibility(View.GONE);                    }                    @Override                    public void onFailure(Call<meetingBean> call, Throwable t) {                    }                });                submit.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View view) {                        if (name.getText().toString().length()>0)                        {                            if (isValidEmail(email.getText()))                            {                                if (validCellPhone(phone.getText().toString()))                                {                                    if (sub.getText().toString().length()>0)                                    {                                        if (mess.getText().toString().length()>0)                                        {                                            progress.setVisibility(View.VISIBLE);                                            Retrofit retrofit = new Retrofit.Builder()                                                    .baseUrl("http://nationproducts.in/")                                                    .addConverterFactory(ScalarsConverterFactory.create())                                                    .addConverterFactory(GsonConverterFactory.create())                                                    .build();                                            Register cr = retrofit.create(Register.class);                                            Call<RegisterBean> call = cr.submitQuery("1" , name.getText().toString() , email.getText().toString() , phone.getText().toString() , sub.getText().toString() , mess.getText().toString());                                            call.enqueue(new Callback<RegisterBean>() {                                                @Override                                                public void onResponse(Call<RegisterBean> call, Response<RegisterBean> response) {                                                    if (response.body() != null) {                                                        if (response.body().getStatus().equals("1")) {                                                            //Toast.makeText(getActivity() , "Your query submitted successfully" , Toast.LENGTH_SHORT).show();                                                            toast.setText("Your query submitted successfully");                                                            toast.show();                                                            name.setText("");                                                            email.setText("");                                                            phone.setText("");                                                            sub.setText("");                                                            mess.setText("");                                                        }                                                    }                                                        progress.setVisibility(View.GONE);                                                }                                                @Override                                                public void onFailure(Call<RegisterBean> call, Throwable t) {                                                }                                            });                                        }                                        else                                        {                                            //Toast.makeText(getContext() , "Please enter a message" , Toast.LENGTH_SHORT).show();                                            toast.setText("Please enter a message");                                            toast.show();                                        }                                    }                                    else                                    {                                        //Toast.makeText(getContext() , "Please enter a subject" , Toast.LENGTH_SHORT).show();                                        toast.setText("Please enter a subject");                                        toast.show();                                    }                                }                                else                                {                                    //Toast.makeText(getContext() , "Invalid phone number" , Toast.LENGTH_SHORT).show();                                    toast.setText("Invalid phone number");                                    toast.show();                                }                            }                            else                            {                                //Toast.makeText(getActivity() , "Invalid Email" , Toast.LENGTH_SHORT).show();                                toast.setText("Invalid Email");                                toast.show();                            }                        }                        else {                            //Toast.makeText(getActivity() , "Name is required" , Toast.LENGTH_SHORT).show();                            toast.setText("Name is required");                            toast.show();                        }                    }                });                return v;            }        }    }    public static boolean isValidEmail(CharSequence target) {        return !TextUtils.isEmpty(target) && android.util.Patterns.EMAIL_ADDRESS.matcher(target).matches();    }    public static boolean validCellPhone(String number)    {        return android.util.Patterns.PHONE.matcher(number).matches();    }}