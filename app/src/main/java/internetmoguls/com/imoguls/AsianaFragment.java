package internetmoguls.com.imoguls;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageManager;import android.graphics.Color;import android.graphics.Point;import android.graphics.Typeface;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.design.widget.TabLayout;import android.support.v4.app.ActivityCompat;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentStatePagerAdapter;import android.support.v4.widget.DrawerLayout;import android.support.v7.widget.GridLayoutManager;import android.support.v7.widget.RecyclerView;import android.text.Html;import android.view.Display;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.ads.formats.NativeAd;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;import com.nostra13.universalimageloader.core.ImageLoader;import java.util.ArrayList;import java.util.Collections;import java.util.List;import INTERFACES.Register;import POJO.RegisterBean;import POJO.fnbBean;import aboutPOJO.aboutBean;import contactPOJO.contactBean;import galleryPOJO.Gallery;import galleryPOJO.galleryBean;import meetingsPOJO.meetingBean;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.converter.scalars.ScalarsConverterFactory;import roomsPOJO.Room;import roomsPOJO.roomsBean;public class AsianaFragment extends Fragment {    TabLayout tabs;    MyViewPager pager;    DrawerLayout drawer;    ImageButton left , right;    SharedPreferences pref;    static SharedPreferences.Editor edit;    static Typeface tf;    static Typeface tf2;    static String hotelId;    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        View view  = inflater.inflate(R.layout.activity_asiana , container , false);        hotelId = getArguments().getString("form");        pref = getContext().getSharedPreferences("myPref", Context.MODE_PRIVATE);        edit = pref.edit();        left = (ImageButton)view.findViewById(R.id.asiana_left);        right = (ImageButton)view.findViewById(R.id.asiana_right);        left.setVisibility(View.GONE);        bean b = (bean) getContext().getApplicationContext();        tf = Typeface.createFromAsset(getContext().getAssets(), "roboto.ttf");        tf2 = Typeface.createFromAsset(getContext().getAssets(), "vladmir.TTF");        tabs = (TabLayout) view.findViewById(R.id.tabs_asiana);        pager = (MyViewPager) view.findViewById(R.id.pager_asiana);        pager.setSwipeable(false);        tabs.setFitsSystemWindows(true);        pager.setOffscreenPageLimit(1);        View av = inflater.inflate(R.layout.tab_about, null);        View av1 = inflater.inflate(R.layout.tab_about, null);        View av2 = inflater.inflate(R.layout.tab_about, null);        View av3 = inflater.inflate(R.layout.tab_about, null);        View av4 = inflater.inflate(R.layout.tab_about, null);        View av5 = inflater.inflate(R.layout.tab_about, null);        View av6 = inflater.inflate(R.layout.tab_about, null);        View av7 = inflater.inflate(R.layout.tab_about, null);        TextView tabtext = (TextView) av.findViewById(R.id.tab_text);        TextView tabtext1 = (TextView) av1.findViewById(R.id.tab_text);        TextView tabtext2 = (TextView) av2.findViewById(R.id.tab_text);        TextView tabtext3 = (TextView) av3.findViewById(R.id.tab_text);        TextView tabtext4 = (TextView) av4.findViewById(R.id.tab_text);        TextView tabtext5 = (TextView) av5.findViewById(R.id.tab_text);        TextView tabtext6 = (TextView) av6.findViewById(R.id.tab_text);        TextView tabtext7 = (TextView) av7.findViewById(R.id.tab_text);        Display display = getActivity().getWindowManager().getDefaultDisplay();        Point size = new Point();        display.getSize(size);        tabtext.setMinWidth(size.x / 3);        tabtext.setMaxWidth(size.x / 3);        tabtext.setText("About");        tabtext1.setMinWidth(size.x / 3);        tabtext1.setMaxWidth(size.x / 3);        tabtext1.setText("Rooms");        tabtext2.setMinWidth(size.x / 3);        tabtext2.setMaxWidth(size.x / 3);        tabtext2.setText("Offers");        tabtext3.setMinWidth(size.x / 3);        tabtext3.setMaxWidth(size.x / 3);        tabtext3.setText("facilities");        tabtext4.setMinWidth(size.x / 3);        tabtext4.setMaxWidth(size.x / 3);        tabtext4.setText("Meeting/Events");        tabtext5.setMinWidth(size.x / 3);        tabtext5.setMaxWidth(size.x / 3);        tabtext5.setText("Contact us");        tabtext6.setMinWidth(size.x / 3);        tabtext6.setMaxWidth(size.x / 3);        tabtext6.setText("Gallery");        tabtext7.setMinWidth(size.x / 3);        tabtext7.setMaxWidth(size.x / 3);        tabtext7.setText("Restaurants");//        tabs.addTab(tabs.newTab().setCustomView(av));        //      tabs.addTab(tabs.newTab().setText("ROOMS"));        //  tabs.addTab(tabs.newTab().setText("F and B"));        //    tabs.addTab(tabs.newTab().setText("MEETING/EVENTS"));        tabs.setTabMode(TabLayout.MODE_SCROLLABLE);        tabs.setTabGravity(TabLayout.GRAVITY_FILL);        FragStatePagerAdapter adapter = new FragStatePagerAdapter(getChildFragmentManager(), 8);        pager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabs));        pager.setAdapter(adapter);        tabs.setupWithViewPager(pager);        tabs.getTabAt(0).setCustomView(av);        tabs.getTabAt(1).setCustomView(av1);        tabs.getTabAt(2).setCustomView(av2);        tabs.getTabAt(3).setCustomView(av3);        tabs.getTabAt(4).setCustomView(av4);        tabs.getTabAt(5).setCustomView(av5);        tabs.getTabAt(6).setCustomView(av6);        tabs.getTabAt(7).setCustomView(av7);        tabs.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {            @Override            public void onTabSelected(TabLayout.Tab tab) {                if (tab.getPosition() == 0)                {                    left.setVisibility(View.GONE);                }                else                {                    left.setVisibility(View.VISIBLE);                }                if (tab.getPosition() == 7)                {                    right.setVisibility(View.GONE);                }                else                {                    right.setVisibility(View.VISIBLE);                }                pager.setCurrentItem(tab.getPosition());                View v = tab.getCustomView();                TextView tv = (TextView) v.findViewById(R.id.tab_text);                //tv.setBackgroundColor(getResources().getColor(R.color.colorAccent));                tv.setTextColor(getResources().getColor(R.color.colorAccent));            }            @Override            public void onTabUnselected(TabLayout.Tab tab) {                View v = tab.getCustomView();                TextView tv = (TextView) v.findViewById(R.id.tab_text);                tv.setTextColor(Color.GRAY);            }            @Override            public void onTabReselected(TabLayout.Tab tab) {            }        });        return view;    }    class FragStatePagerAdapter extends FragmentStatePagerAdapter {        private int count;        FragStatePagerAdapter(FragmentManager fm, int count) {            super(fm);            this.count = count;        }        @Override        public Fragment getItem(int position) {            switch (position) {                case 0:                    return new about();                case 1:                    return new rooms();                case 2:                    return new fnb();                case 3:                    return new facilities();                case 4:                    return new meetings();                case 5:                    return new contact();                case 6:                    return new gallery();                case 7:                    return new facilities();            }            return null;        }        @Override        public int getCount() {            return count;        }    }    public static class facilities extends Fragment{        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View view = inflater.inflate(R.layout.asiana_facilities , container , false);            return view;        }    }    public static class contact extends Fragment {        GoogleMap mMap;        TextView title , phone , address , email;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View view = inflater.inflate(R.layout.contacy_asiana, container, false);            final SupportMapFragment mapFragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.eventMapView);            mapFragment.getMapAsync(new OnMapReadyCallback() {                @Override                public void onMapReady(GoogleMap googleMap) {                    mMap = googleMap;                    LatLng loc = new LatLng(12.864030, 80.227218);                    mMap.addMarker(new MarkerOptions().position(loc).title("Kohinoor Asiana"));                    mMap.animateCamera(CameraUpdateFactory.newLatLng(loc));                    if (ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {                        // TODO: Consider calling                        //    ActivityCompat#requestPermissions                        // here to request the missing permissions, and then overriding                        //   public void onRequestPermissionsResult(int requestCode, String[] permissions,                        //                                          int[] grantResults)                        // to handle the case where the user grants the permission. See the documentation                        // for ActivityCompat#requestPermissions for more details.                        return;                    }                    //mMap.setMyLocationEnabled(true);                }            });            title = (TextView)view.findViewById(R.id.contact_title);            phone = (TextView)view.findViewById(R.id.contact_phone);            address = (TextView)view.findViewById(R.id.contact_address);            email = (TextView)view.findViewById(R.id.contact_email);            title.setTypeface(tf2);            title.setTextSize(30);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<contactBean> call = cr.getContact(hotelId);            call.enqueue(new Callback<contactBean>() {                @Override                public void onResponse(Call<contactBean> call, Response<contactBean> response) {                    if (response.body()!=null)                    {                        title.setText(Html.fromHtml(response.body().getContactTitle()));                        phone.setText(Html.fromHtml(response.body().getContactPhone()));                        email.setText(Html.fromHtml(response.body().getContactEmail()));                        address.setText(Html.fromHtml(response.body().getContactAddress()));                    }                }                @Override                public void onFailure(Call<contactBean> call, Throwable t) {                }            });            return view;        }    }    public static class about extends Fragment{        TextView title , content;        ImageView image;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.asiana_about_us , container , false);            title = (TextView)v.findViewById(R.id.about_title);            content = (TextView)v.findViewById(R.id.about_content);            image = (ImageView)v.findViewById(R.id.about_image);            title.setTypeface(tf2);            title.setTextSize(30);            TextView con = (TextView)v.findViewById(R.id.about_content);            con.setTypeface(tf);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<aboutBean> call = cr.getAbout(hotelId);            call.enqueue(new Callback<aboutBean>() {                @Override                public void onResponse(Call<aboutBean> call, Response<aboutBean> response) {                    if (response.body()!=null)                    {                        ImageLoader loader = ImageLoader.getInstance();                        loader.displayImage(response.body().getAboutImage() , image);                        title.setText(Html.fromHtml(response.body().getAboutTitle()));                        content.setText(Html.fromHtml(response.body().getAboutDescription()));                    }                }                @Override                public void onFailure(Call<aboutBean> call, Throwable t) {                }            });            return v;        }    }    public static class gallery extends Fragment{        TextView title;        RecyclerView grid;        List<Gallery> list;        GridLayoutManager manager;        GalleryAdapter adapter;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.gallery_page , container , false);            manager = new GridLayoutManager(getContext() , 2);            grid = (RecyclerView)v.findViewById(R.id.gallery_list);            list = new ArrayList<>();            title = (TextView)v.findViewById(R.id.gallery_heading);            adapter = new GalleryAdapter(getContext() , list);            grid.setLayoutManager(manager);            grid.setAdapter(adapter);            title.setTypeface(tf2);            title.setTextSize(30);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<galleryBean> call = cr.getGallery(hotelId);            call.enqueue(new Callback<galleryBean>() {                @Override                public void onResponse(Call<galleryBean> call, Response<galleryBean> response) {                    if (response.body()!=null) {                        if (response.body().getGalleryHeading().getHeading().length()>0)                        {                            title.setText(response.body().getGalleryHeading().getHeading());                        }                        adapter.setGridData(response.body().getGallerData().getGallery());                    }                }                @Override                public void onFailure(Call<galleryBean> call, Throwable t) {                }            });            return v;        }    }    public static class rooms extends Fragment{        protected int a;        TextView title;        RecyclerView grid;        GridLayoutManager manager;        RoomsAdapter adapter;        List<Room> list;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.asiana_rooms , container , false);            list = new ArrayList<>();            title = (TextView)v.findViewById(R.id.rooms_title);            grid = (RecyclerView)v.findViewById(R.id.rooms_list);            manager = new GridLayoutManager(getContext() , 1);            adapter = new RoomsAdapter(getContext() , list);            grid.setLayoutManager(manager);            grid.setAdapter(adapter);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<roomsBean> call = cr.getRooms(hotelId);            call.enqueue(new Callback<roomsBean>() {                @Override                public void onResponse(Call<roomsBean> call, Response<roomsBean> response) {                    if (response.body()!=null)                    {                        if (response.body().getRoomHeading().getHeading().length()>0)                        {                            title.setText(response.body().getRoomHeading().getHeading());                        }                        //list = response.body().getRoomData().getRoom();                        adapter.setGridData(response.body().getRoomData().getRoom());                    }                }                @Override                public void onFailure(Call<roomsBean> call, Throwable t) {                }            });            return v;        }    }    public static class fnb extends Fragment{        //FnBListAdapter adapter;        //RecyclerView grid;        //GridLayoutManager manager;        //TextView hide;        LinearLayout todaysOffer , moreOffers;        TextView todaysoffer , moreoffer;        @Override        public void onCreate(@Nullable Bundle savedInstanceState) {            super.onCreate(savedInstanceState);            // manager = new GridLayoutManager(getContext() , 1);        }        @Nullable        @Override        public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.asiana_fnb , container , false);            todaysOffer = (LinearLayout)v.findViewById(R.id.layout_todays_offer);            moreOffers = (LinearLayout)v.findViewById(R.id.fnb_more_offers);            todaysoffer = (TextView)v.findViewById(R.id.todaysoffer);            moreoffer = (TextView)v.findViewById(R.id.moreoffers);            TextView title = (TextView)v.findViewById(R.id.asiana_fnb_title);            title.setTypeface(tf2);            title.setTextSize(30);            //hide = (TextView)v.findViewById(R.id.hide);            // grid = (RecyclerView)v.findViewById(R.id.fnb_list);            // grid.setLayoutManager(manager);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<fnbBean> call = cr.getfnb("1");            call.enqueue(new Callback<fnbBean>() {                @Override                public void onResponse(Call<fnbBean> call, Response<fnbBean> response) {                    if (response.body().getPosts()!=null)                    {                        for (int i = 0 ; i<response.body().getPosts().size() ; i++)                        {                            if (response.body().getPosts().get(i).getPost().getOfferDay().equals("1"))                            {                                todaysoffer.setVisibility(View.VISIBLE);                                ImageLoader imageLoader = ImageLoader.getInstance();                                //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                View view = inflater.inflate(R.layout.fnb_model , null);                                ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                TextView desc = (TextView)view.findViewById(R.id.fnb_offer_desc);                                Button book = (Button)view.findViewById(R.id.fnb_offer_button);                                book.setOnClickListener(new View.OnClickListener() {                                    @Override                                    public void onClick(View view) {                                        Intent i = new Intent(getActivity() , WebView.class);                                        i.putExtra("url" , "http://www.axisrooms.com/beV2/home1.html?bookingEngineId=1792");                                        getActivity().startActivity(i);                                    }                                });                                imageLoader.displayImage(response.body().getPosts().get(i).getPost().getImage() , banner);                                title.setText(response.body().getPosts().get(i).getPost().getOfferName());                                desc.setText(response.body().getPosts().get(i).getPost().getDescription());                                todaysOffer.addView(view);                            }                            else                            {                                moreoffer.setVisibility(View.VISIBLE);                                ImageLoader imageLoader = ImageLoader.getInstance();                                //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                View view = inflater.inflate(R.layout.fnb_model , null);                                ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                TextView desc = (TextView)view.findViewById(R.id.fnb_offer_desc);                                Button book = (Button)view.findViewById(R.id.fnb_offer_button);                                book.setOnClickListener(new View.OnClickListener() {                                    @Override                                    public void onClick(View view) {                                        Intent i = new Intent(getActivity() , WebView.class);                                        i.putExtra("url" , "http://www.axisrooms.com/beV2/home1.html?bookingEngineId=1792");                                        getActivity().startActivity(i);                                    }                                });                                imageLoader.displayImage(response.body().getPosts().get(i).getPost().getImage() , banner);                                title.setText(response.body().getPosts().get(i).getPost().getOfferName());                                desc.setText(response.body().getPosts().get(i).getPost().getDescription());                                moreOffers.addView(view);                            }                        }                        // adapter = new FnBListAdapter(getContext() , response.body().getPosts());                        //  grid.setAdapter(adapter);                        //hide.setVisibility(View.GONE);                        // grid.setVisibility(View.VISIBLE);                    }                    else                    {                        //hide.setVisibility(View.VISIBLE);                        //  grid.setVisibility(View.GONE);                    }                }                @Override                public void onFailure(Call<fnbBean> call, Throwable t) {                }            });            return v;        }    }    public static class meetings extends Fragment{        EditText name , email , phone , sub , mess;        TextView title , content;        Button submit;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.asiana_meetings , container , false);            name = (EditText)v.findViewById(R.id.asiana_m_name);            email = (EditText)v.findViewById(R.id.asiana_m_email);            phone = (EditText)v.findViewById(R.id.asiana_m_phone);            sub = (EditText)v.findViewById(R.id.asiana_m_subject);            mess = (EditText)v.findViewById(R.id.asiana_m_message);            submit = (Button) v.findViewById(R.id.asiana_m_submit);            title = (TextView)v.findViewById(R.id.meetings_title);            content = (TextView)v.findViewById(R.id.meetings_content);            title.setTypeface(tf2);            title.setTextSize(30);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<meetingBean> call = cr.getMeetings(hotelId);            call.enqueue(new Callback<meetingBean>() {                @Override                public void onResponse(Call<meetingBean> call, Response<meetingBean> response) {                    if (response.body()!=null)                    {                        title.setText(Html.fromHtml(response.body().getMeetName()));                        content.setText(Html.fromHtml(response.body().getMeetDescription()));                    }                }                @Override                public void onFailure(Call<meetingBean> call, Throwable t) {                }            });            submit.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    if (name.getText().toString().length()>0)                    {                        if (email.getText().toString().length()>0)                        {                            if (phone.getText().toString().length()>0)                            {                                if (sub.getText().toString().length()>0)                                {                                    if (mess.getText().toString().length()>0)                                    {                                        Retrofit retrofit = new Retrofit.Builder()                                                .baseUrl("http://nationproducts.in/")                                                .addConverterFactory(ScalarsConverterFactory.create())                                                .addConverterFactory(GsonConverterFactory.create())                                                .build();                                        Register cr = retrofit.create(Register.class);                                        Call<RegisterBean> call = cr.submitQuery("1" , name.getText().toString() , email.getText().toString() , phone.getText().toString() , sub.getText().toString() , mess.getText().toString());                                        call.enqueue(new Callback<RegisterBean>() {                                            @Override                                            public void onResponse(Call<RegisterBean> call, Response<RegisterBean> response) {                                                if (response.body().getStatus().equals("1"))                                                {                                                    Toast.makeText(getActivity() , "Your query submitted successfully" , Toast.LENGTH_SHORT).show();                                                    name.setText("");                                                    email.setText("");                                                    phone.setText("");                                                    sub.setText("");                                                    mess.setText("");                                                }                                            }                                            @Override                                            public void onFailure(Call<RegisterBean> call, Throwable t) {                                            }                                        });                                    }                                    else                                    {                                        Toast.makeText(getContext() , "Please enter a message" , Toast.LENGTH_SHORT).show();                                    }                                }                                else                                {                                    Toast.makeText(getContext() , "Please enter a subject" , Toast.LENGTH_SHORT).show();                                }                            }                            else                            {                                Toast.makeText(getContext() , "Phone number is required" , Toast.LENGTH_SHORT).show();                            }                        }                        else                        {                            Toast.makeText(getActivity() , "Email is required" , Toast.LENGTH_SHORT).show();                        }                    }                    else {                        Toast.makeText(getActivity() , "Name is required" , Toast.LENGTH_SHORT).show();                    }                }            });            return v;        }    }}