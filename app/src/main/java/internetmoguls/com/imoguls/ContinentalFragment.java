package internetmoguls.com.imoguls;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.PackageManager;import android.graphics.Color;import android.graphics.Point;import android.graphics.Typeface;import android.os.Bundle;import android.support.annotation.Nullable;import android.support.design.widget.TabLayout;import android.support.v4.app.ActivityCompat;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentStatePagerAdapter;import android.view.Display;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.google.android.gms.maps.CameraUpdateFactory;import com.google.android.gms.maps.GoogleMap;import com.google.android.gms.maps.OnMapReadyCallback;import com.google.android.gms.maps.SupportMapFragment;import com.google.android.gms.maps.model.LatLng;import com.google.android.gms.maps.model.MarkerOptions;import com.nostra13.universalimageloader.core.ImageLoader;import INTERFACES.Register;import POJO.RegisterBean;import POJO.fnbBean;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.converter.scalars.ScalarsConverterFactory;public class ContinentalFragment extends Fragment {    TabLayout tabs;    MyViewPager pager;    SharedPreferences pref;    static SharedPreferences.Editor edit;    static Typeface tf;    static Typeface tf2;    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.activity_continental , container , false);        pref = getContext().getSharedPreferences("myPref" , Context.MODE_PRIVATE);        edit = pref.edit();        bean b = (bean)getContext().getApplicationContext();        tf = Typeface.createFromAsset(getContext().getAssets() , "roboto.ttf");        tf2 = Typeface.createFromAsset(getContext().getAssets() , "vladmir.TTF");        tabs = (TabLayout)view.findViewById(R.id.tabs_asiana);        pager = (MyViewPager) view.findViewById(R.id.pager_asiana);        pager.setSwipeable(false);        pager.setOffscreenPageLimit(5);        View av = inflater.inflate(R.layout.tab_about , null);        View av1 = inflater.inflate(R.layout.tab_about , null);        View av2= inflater.inflate(R.layout.tab_about , null);        View av3 = inflater.inflate(R.layout.tab_about , null);        View av4 = inflater.inflate(R.layout.tab_about, null);        View av5 = inflater.inflate(R.layout.tab_about, null);        TextView tabtext = (TextView)av.findViewById(R.id.tab_text);        TextView tabtext1 = (TextView)av1.findViewById(R.id.tab_text);        TextView tabtext2 = (TextView)av2.findViewById(R.id.tab_text);        TextView tabtext3 = (TextView)av3.findViewById(R.id.tab_text);        TextView tabtext4 = (TextView) av4.findViewById(R.id.tab_text);        TextView tabtext5 = (TextView) av5.findViewById(R.id.tab_text);        Display display = getActivity().getWindowManager().getDefaultDisplay();        Point size = new Point();        display.getSize(size);        tabtext.setMinWidth(size.x/3);        tabtext.setMaxWidth(size.x/3);        tabtext.setText("About");        tabtext1.setMinWidth(size.x/3);        tabtext1.setMaxWidth(size.x/3);        tabtext1.setText("Rooms");        tabtext2.setMinWidth(size.x/3);        tabtext2.setMaxWidth(size.x/3);        tabtext2.setText("F & B");        tabtext3.setMinWidth(size.x/3);        tabtext3.setMaxWidth(size.x/3);        tabtext3.setText("Meeting/Events");        tabtext4.setMinWidth(size.x / 3);        tabtext4.setMaxWidth(size.x / 3);        tabtext4.setText("Contact us");        tabtext5.setMinWidth(size.x / 3);        tabtext5.setMaxWidth(size.x / 3);        tabtext5.setText("Facilities");        tabs.setTabMode(TabLayout.MODE_SCROLLABLE);        tabs.setTabGravity(TabLayout.GRAVITY_CENTER);        FragStatePagerAdapter adapter = new FragStatePagerAdapter(getChildFragmentManager() , 6);        pager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabs));        pager.setAdapter(adapter);        tabs.setupWithViewPager(pager);        tabs.getTabAt(0).setCustomView(av);        tabs.getTabAt(1).setCustomView(av1);        tabs.getTabAt(2).setCustomView(av2);        tabs.getTabAt(3).setCustomView(av5);        tabs.getTabAt(4).setCustomView(av3);        tabs.getTabAt(5).setCustomView(av4);        tabs.setOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {            @Override            public void onTabSelected(TabLayout.Tab tab) {                pager.setCurrentItem(tab.getPosition());                View v = tab.getCustomView();                TextView tv = (TextView) v.findViewById(R.id.tab_text);                //tv.setBackgroundColor(getResources().getColor(R.color.colorAccent));                tv.setTextColor(getResources().getColor(R.color.colorAccent));            }            @Override            public void onTabUnselected(TabLayout.Tab tab) {                View v = tab.getCustomView();                TextView tv = (TextView) v.findViewById(R.id.tab_text);                tv.setTextColor(Color.GRAY);            }            @Override            public void onTabReselected(TabLayout.Tab tab) {            }        });        return view;    }    class FragStatePagerAdapter extends FragmentStatePagerAdapter {        private int count;        FragStatePagerAdapter(FragmentManager fm, int count) {            super(fm);            this.count = count;        }        @Override        public Fragment getItem(int position) {            switch (position) {                case 0:                    return new about();                case 1:                    return new rooms();                case 2:                    return new fnb();                case 3:                    return new facilities();                case 4:                    return new meetings();                case 5:                    return new contact();            }            return null;        }        @Override        public int getCount() {            return count;        }    }    public static class facilities extends Fragment{        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View view = inflater.inflate(R.layout.continental_facilities , container , false);            return view;        }    }    public static class contact extends Fragment {        GoogleMap mMap;        TextView title;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View view = inflater.inflate(R.layout.contact_continental, container, false);            final SupportMapFragment mapFragment = (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.eventMapView);            mapFragment.getMapAsync(new OnMapReadyCallback() {                @Override                public void onMapReady(GoogleMap googleMap) {                    mMap = googleMap;                    LatLng loc = new LatLng(19.112312, 72.867960);                    mMap.addMarker(new MarkerOptions().position(loc).title("Kohinoor Continental"));                    mMap.animateCamera(CameraUpdateFactory.newLatLng(loc));                    if (ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {                        // TODO: Consider calling                        //    ActivityCompat#requestPermissions                        // here to request the missing permissions, and then overriding                        //   public void onRequestPermissionsResult(int requestCode, String[] permissions,                        //                                          int[] grantResults)                        // to handle the case where the user grants the permission. See the documentation                        // for ActivityCompat#requestPermissions for more details.                        return;                    }                    //mMap.setMyLocationEnabled(true);                }            });            title = (TextView)view.findViewById(R.id.contact_asiana_title);            title.setTypeface(tf2);            title.setTextSize(30);            return view;        }    }    public static class about extends Fragment{        Button book;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.continental_about , container , false);            book = (Button)v.findViewById(R.id.book_asiana);            TextView title = (TextView)v.findViewById(R.id.cont_ab_title);            TextView con = (TextView)v.findViewById(R.id.cont_ab_con);            title.setTypeface(tf2);            title.setTextSize(30);            con.setTypeface(tf);            book.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    Intent i = new Intent(getActivity() , WebView.class);                    i.putExtra("url" , "https://www.yourreservation.net/tb3/index.cfm?bf=HABOMCON&arrivaldate=&departuredate=&adult=1%20Adult&child=0%20Child&plprun=1&_=1475668601020");                    getActivity().startActivity(i);                }            });            return v;        }    }    public static class rooms extends Fragment{        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.continental_rooms , container , false);            return v;        }    }    public static class fnb extends Fragment{        //FnBListAdapter adapter;        //RecyclerView grid;        // GridLayoutManager manager;        //TextView hide;        LinearLayout todaysOffer , moreOffers;        TextView todaysoffer , moreoffer;        @Override        public void onCreate(@Nullable Bundle savedInstanceState) {            super.onCreate(savedInstanceState);            //  manager = new GridLayoutManager(getContext() , 1);        }        @Nullable        @Override        public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.asiana_fnb , container , false);            //hide = (TextView)v.findViewById(R.id.hide);            todaysOffer = (LinearLayout)v.findViewById(R.id.layout_todays_offer);            moreOffers = (LinearLayout)v.findViewById(R.id.fnb_more_offers);            todaysoffer = (TextView)v.findViewById(R.id.todaysoffer);            moreoffer = (TextView)v.findViewById(R.id.moreoffers);            TextView title = (TextView)v.findViewById(R.id.asiana_fnb_title);            title.setTypeface(tf2);            title.setTextSize(30);            // grid = (RecyclerView)v.findViewById(R.id.fnb_list);            // grid.setLayoutManager(manager);            Retrofit retrofit = new Retrofit.Builder()                    .baseUrl("http://nationproducts.in/")                    .addConverterFactory(ScalarsConverterFactory.create())                    .addConverterFactory(GsonConverterFactory.create())                    .build();            Register cr = retrofit.create(Register.class);            Call<fnbBean> call = cr.getfnb("2");            call.enqueue(new Callback<fnbBean>() {                @Override                public void onResponse(Call<fnbBean> call, Response<fnbBean> response) {                    if (response.body().getPosts()!=null)                    {                        for (int i = 0 ; i<response.body().getPosts().size() ; i++)                        {                            if (response.body().getPosts().get(i).getPost().getOfferDay().equals("1"))                            {todaysoffer.setVisibility(View.VISIBLE);                                ImageLoader imageLoader = ImageLoader.getInstance();                                //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                View view = inflater.inflate(R.layout.fnb_model , null);                                ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                TextView desc = (TextView)view.findViewById(R.id.fnb_offer_desc);                                Button book = (Button)view.findViewById(R.id.fnb_offer_button);                                book.setOnClickListener(new View.OnClickListener() {                                    @Override                                    public void onClick(View view) {                                        Intent i = new Intent(getActivity() , WebView.class);                                        i.putExtra("url" , "https://www.yourreservation.net/tb3/index.cfm?bf=HABOMCON&arrivaldate=&departuredate=&adult=1%20Adult&child=0%20Child&plprun=1&_=1475668601020");                                        getActivity().startActivity(i);                                    }                                });                                imageLoader.displayImage(response.body().getPosts().get(i).getPost().getImage() , banner);                                title.setText(response.body().getPosts().get(i).getPost().getOfferName());                                desc.setText(response.body().getPosts().get(i).getPost().getDescription());                                todaysOffer.addView(view);                            }                            else                            {moreoffer.setVisibility(View.VISIBLE);                                ImageLoader imageLoader = ImageLoader.getInstance();                                //LayoutInflater inflater1 = (LayoutInflater)getContext().getSystemService(getContext().LAYOUT_INFLATER_SERVICE);                                View view = inflater.inflate(R.layout.fnb_model , null);                                ImageView banner = (ImageView)view.findViewById(R.id.fnb_offer_image);                                TextView title = (TextView)view.findViewById(R.id.fnb_offer_name);                                TextView desc = (TextView)view.findViewById(R.id.fnb_offer_desc);                                Button book = (Button)view.findViewById(R.id.fnb_offer_button);                                book.setOnClickListener(new View.OnClickListener() {                                    @Override                                    public void onClick(View view) {                                        Intent i = new Intent(getActivity() , WebView.class);                                        i.putExtra("url" , "https://www.yourreservation.net/tb3/index.cfm?bf=HABOMCON&arrivaldate=&departuredate=&adult=1%20Adult&child=0%20Child&plprun=1&_=1475668601020");                                        getActivity().startActivity(i);                                    }                                });                                imageLoader.displayImage(response.body().getPosts().get(i).getPost().getImage() , banner);                                title.setText(response.body().getPosts().get(i).getPost().getOfferName());                                desc.setText(response.body().getPosts().get(i).getPost().getDescription());                                moreOffers.addView(view);                            }                        }                        //  adapter = new FnBListAdapter(getContext() , response.body().getPosts());                        //  grid.setAdapter(adapter);                        //hide.setVisibility(View.GONE);                        //  grid.setVisibility(View.VISIBLE);                    }                    else                    {                        //hide.setVisibility(View.VISIBLE);                        // grid.setVisibility(View.GONE);                    }                }                @Override                public void onFailure(Call<fnbBean> call, Throwable t) {                }            });            return v;        }    }    public static class meetings extends Fragment{        EditText name , email , phone , sub , mess;        Button submit;        @Nullable        @Override        public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {            View v = inflater.inflate(R.layout.continental_meeting , container , false);            TextView tit = (TextView)v.findViewById(R.id.cont_meeting_title);            tit.setTypeface(tf2);            tit.setTextSize(30);            name = (EditText)v.findViewById(R.id.cont_m_name);            email = (EditText)v.findViewById(R.id.cont_m_email);            phone = (EditText)v.findViewById(R.id.cont_m_phone);            sub = (EditText)v.findViewById(R.id.cont_m_subject);            mess = (EditText)v.findViewById(R.id.cont_m_message);            submit = (Button) v.findViewById(R.id.cont_m_submit);            submit.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    if (name.getText().toString().length()>0)                    {                        if (email.getText().toString().length()>0)                        {                            if (phone.getText().toString().length()>0)                            {                                if (sub.getText().toString().length()>0)                                {                                    if (mess.getText().toString().length()>0)                                    {                                        Retrofit retrofit = new Retrofit.Builder()                                                .baseUrl("http://nationproducts.in/")                                                .addConverterFactory(ScalarsConverterFactory.create())                                                .addConverterFactory(GsonConverterFactory.create())                                                .build();                                        Register cr = retrofit.create(Register.class);                                        Call<RegisterBean> call = cr.submitQuery("2" , name.getText().toString() , email.getText().toString() , phone.getText().toString() , sub.getText().toString() , mess.getText().toString());                                        call.enqueue(new Callback<RegisterBean>() {                                            @Override                                            public void onResponse(Call<RegisterBean> call, Response<RegisterBean> response) {                                                if (response.body().getStatus().equals("1"))                                                {                                                    Toast.makeText(getActivity() , "Your query submitted successfully" , Toast.LENGTH_SHORT).show();                                                    name.setText("");                                                    email.setText("");                                                    phone.setText("");                                                    sub.setText("");                                                    mess.setText("");                                                }                                            }                                            @Override                                            public void onFailure(Call<RegisterBean> call, Throwable t) {                                            }                                        });                                    }                                    else                                    {                                        Toast.makeText(getContext() , "Please enter a message" , Toast.LENGTH_SHORT).show();                                    }                                }                                else                                {                                    Toast.makeText(getContext() , "Please enter a subject" , Toast.LENGTH_SHORT).show();                                }                            }                            else                            {                                Toast.makeText(getContext() , "Phone number is required" , Toast.LENGTH_SHORT).show();                            }                        }                        else                        {                            Toast.makeText(getActivity() , "Email is required" , Toast.LENGTH_SHORT).show();                        }                    }                    else {                        Toast.makeText(getActivity() , "Name is required" , Toast.LENGTH_SHORT).show();                    }                }            });            return v;        }    }}